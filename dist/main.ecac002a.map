{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","string2","n","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,OAAOC,SAASC,aAAT,CAAuB,OAAvB,CAAX;AACA,IAAIC,QAAQF,SAASC,aAAT,CAAuB,QAAvB,CAAZ;AACA,IAAIE,+7CAAJ;AAgDA,IAAIC,UAAU,EAAd;AACA;AACA;AACA,IAAIC,IAAI,CAAR;AACA,IAAIC,OAAO,SAAPA,IAAO,GAAM;AACbC,eAAW,YAAM;;AAEb;AACA,YAAIJ,OAAOE,CAAP,MAAc,IAAlB,EAAuB;AACnBD,uBAAW,MAAX,CADmB,CACD;AACrB,SAFD,MAEO,IAAGD,OAAOE,CAAP,MAAa,GAAhB,EAAoB;AACvBD,uBAAW,QAAX,CADuB,CACH;AACvB,SAFM,MAED;AACNL,iBAAKS,SAAL,GAAiBJ,OAAjB;AACAF,kBAAMM,SAAN,GAAkBL,OAAOM,SAAP,CAAiB,CAAjB,EAAmBJ,CAAnB,CAAlB;AACAK,mBAAOC,QAAP,CAAgB,CAAhB,EAAmB,KAAnB;AACAZ,iBAAKY,QAAL,CAAc,CAAd,EAAiB,KAAjB;AACEP,uBAAWD,OAAOE,CAAP,CAAX,CALI,CAKiB;AACtB;AACD,YAAGA,KAAKF,OAAOS,MAAP,GAAc,CAAtB,EAAwB;AACxBP,iBAAK,CAAL;AACAC;AACC;AACJ,KAlBD,EAkBE,EAlBF;AAmBH,CApBD;AAqBAA","file":"main.ecac002a.map","sourceRoot":"../src","sourcesContent":["let html = document.querySelector('#html')\nlet style = document.querySelector('#style')\nlet string = `/*你好，我是christina\n* 接下来我演示一下我的前端技能\n* 首先我要准备一个div\n**/\n#div1{\n    width: 200px;\n    height: 200px;\n}\n/*\n* 接下来我要把div变成一个八卦图\n* 注意看好了\n* 首先，把div变成一个圆\n**/\n#div1{\n    border-radius:50%;\n    box-shadow:0 0 3px rgba(0,0,0,0.5);\n    background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(12,2,2,1) 100%);\n}\n\n/* 八卦是阴阳形成的\n* 一黑一白\n**/\n/*\n接下来加两个神秘的图形 **/\n#div1::before{\n    width:100px;\n    height:100px;\n    left:50%;\n    top:0%;\n    border-radius:50%;\n    left:50%;\n    transform:translateX(-50%);\n    background:#000;\n    background:radial-gradient(circle, rgba(2,0,36,1) 0%, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(12,2,2,1) 25%);\n    \n}\n#div1::after{\n    width:100px;\n    height:100px;\n    left:50%;\n    bottom:0%;\n    border-radius:50%;\n    left:50%;\n    transform:translateX(-50%);\n    background:#fff;\n    background:radial-gradient(circle, rgba(2,0,36,1) 0%, rgba(0,0,0,1) 0%, rgba(12,2,2,1) 24%, rgba(255,255,255,1) 24%);\n}\n`;\nlet string2 = '';\n// string = string.replace(/\\n/g,'<br>'),正则表达式替换所有空格换行\n//string = string.replace(/\\n/g,'<br>'),弊端是会出现一个<.\nlet n = 0;\nlet step = () => {\n    setTimeout(() => {\n   \n        // 用string2 函数来解决多出的 < 括号。\n        if (string[n] === '\\n'){\n            string2 += '<br>';//如果是回车就改为<br>；\n        } else if(string[n]=== ' '){\n            string2 += '&nbsp;' // html空格改为&nbsp;\n        }else {\n        html.innerHTML = string2;\n        style.innerHTML = string.substring(0,n);\n        window.scrollTo(0, 99999);\n        html.scrollTo(0, 99999);\n          string2 += string[n];//如果不是，就照搬。\n        }\n        if(n <= string.length-1){\n        n += 1;\n        step();\n        }\n    },10);\n};\nstep();\n\n\n\n\n\n"]}